const { defineConfig } = require('eslint-define-config');
module.exports = defineConfig({
    'env': {
        'browser': true,
        'node': true,
        'es2021': true
    },
    'extends': 'eslint:recommended',
    'parser':'vue-eslint-parser',
    'parserOptions': {
        'ecmaVersion': 12,
        'sourceType': 'module'
    },
    'rules': {
        'comma-dangle': ['error', 'never'],
        'curly': 'error',
        'block-scoped-var': 'error',
        'eqeqeq': 'error',
        'eol-last': ['error', 'always'],
        'guard-for-in': 'error',
        'new-cap': ['error', { 'properties': false }],
        'no-alert': 'error',
        'no-caller': 'error',
        'no-console': 'off',
        'no-else-return': 'error',
        'no-empty': 'error',
        'no-extend-native': 'error',
        'no-extra-boolean-cast': 'off',
        'no-floating-decimal': 'error',
        'no-irregular-whitespace': 'error',
        'no-lonely-if': 'error',
        'no-loop-func': 'error',
        'no-multiple-empty-lines': ['error', { 'max': 1, 'maxEOF': 1 }],
        'no-new': 'error',
        'no-prototype-builtins': 'off',
        'no-sequences': 'error',
        'no-tabs': 'error',
        'no-trailing-spaces': 'error',
        'no-undef': 'error',
        'no-undef-init': 'error',
        'no-restricted-globals': ['error', 'fdescribe', 'fit'],
        'no-unused-expressions': 'error',
        'no-unused-vars': ['error', { 'vars': 'all', 'args': 'none' }],
        'no-useless-escape': 'off',
        'no-use-before-define': ['error', 'nofunc'],
        'quotes': ['error', 'single', { 'avoidEscape': true }],
        'require-atomic-updates': 'off',
        'semi': ['error', 'never', { 'beforeStatementContinuationChars': 'never'}],
        'strict': 'error',
        'wrap-iife': ['error', 'any'],
        'global-require': 'error',
        'no-buffer-constructor': 'error',
        'no-new-require': 'error',
        'no-var': 'error',
        'prefer-const': 'error',
        'no-implicit-globals': 'error',
        'indent': ['error', 'table', { 'ignoredNodes': ['CallExpression > FunctionExpression.callee > BlockStatement.body'],'SwitchCase':1 }],
        'id-match': 0,
        'semi-spacing': [0, {'before': false, 'after': true}],
        'vars-on-top':2
    },
    'globals': {
        'ol': 'readonly',
        'echarts': 'readonly',
        'document':'readonly',
        'rbush':'readonly',
        'turf':'readonly',
        'UMap':'readonly',
        '$':'readonly'
    }
});
